headers {
  X-Fresns-Space-Id: {{apiSpaceId}}
  X-Fresns-App-Id: {{appId}}
  X-Fresns-Client-Platform-Id: {{clientPlatformId}}
  X-Fresns-Client-Version: {{clientVersion}}
  X-Fresns-Client-Device-Info: 
  X-Fresns-Client-Timezone: 
  X-Fresns-Client-Lang-Tag: {{clientLangTag}}
  X-Fresns-Client-Content-Format: {{clientContentFormat}}
  X-Fresns-Aid: {{aid}}
  X-Fresns-Aid-Token: {{aidToken}}
  X-Fresns-Uid: {{uid}}
  X-Fresns-Uid-Token: {{uidToken}}
  X-Fresns-Signature: 
  X-Fresns-Signature-Timestamp: 
}

auth {
  mode: none
}

script:pre-request {
  const CryptoJS = require("crypto-js");
  
  // Device Info (IPv4 or IPv6 is required, the rest can be empty)
  const deviceInfoObj = {
      "agent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.835.202 Safari/535.1",
      "type": "Desktop", // Desktop, Mobile, Tablet, Bot
      "mac": "2c:89:dc:71:b6:12",
      "brand": "Apple",
      "model": "Mac",
      "platformName": "Mac",
      "platformVersion": "10.15.7",
      "browserName": "Chrome",
      "browserVersion": "100.0.4896",
      "browserEngine": "Blink",
      "appImei": null,
      "appAndroidId": null,
      "appOaid": null,
      "appIdfa": null,
      "simImsi": null,
      "networkType": "wifi",
      "networkIpv4": "137.132.250.10",
      "networkIpv6": null,
      "networkPort": "8080",
      "networkTimezone": "Asia/Singapore",
      "networkOffset": 28800,
      "networkIsp": "National University of Singapore",
      "networkOrg": "National University of Singapore",
      "networkAs": "AS7472 NUS Information Technology",
      "networkAsName": "NUS-AS-AP",
      "networkReverse": null,
      "networkMobile": false,
      "networkProxy": false,
      "networkHosting": false,
      "mapId": 2, // Dictionary data: Map service provider number
      "latitude": 1.29758,
      "longitude": 103.773,
      "continent": "Asia",
      "continentCode": "AS",
      "country": "Singapore",
      "countryCode": "SG",
      "region": "Central Singapore",
      "regionCode": "01",
      "city": "Singapore",
      "cityCode": "SG",
      "district": "Queenstown",
      "address": null,
      "zip": "119259"
  };
  const deviceInfoString = JSON.stringify(deviceInfoObj);
  const deviceInfoWordArray = CryptoJS.enc.Utf8.parse(deviceInfoString);
  const deviceInfoBase64 = CryptoJS.enc.Base64.stringify(deviceInfoWordArray);
  
  // Client Timezone
  const date = new Date();
  const timezoneOffsetInHours = date.getTimezoneOffset() / -60;
  const utcTimezone = (timezoneOffsetInHours > 0 ? '+' : '') + timezoneOffsetInHours.toString();
  
  // Signature Timestamp (UTC+0)
  const now = Date.now();
  const timezoneOffset = new Date().getTimezoneOffset() * 60000;
  const signTimestamp = now + timezoneOffset;
  
  // Headers
  const headers = {
    'X-Fresns-Space-Id': bru.getEnvVar("apiSpaceId"),
    'X-Fresns-App-Id': bru.getEnvVar("appId"),
    'X-Fresns-Client-Platform-Id': bru.getEnvVar("clientPlatformId"),
    'X-Fresns-Client-Version': bru.getEnvVar("clientVersion"),
    'X-Fresns-Aid': bru.getEnvVar("aid"),
    'X-Fresns-Aid-Token': bru.getEnvVar("aidToken"),
    'X-Fresns-Uid': bru.getEnvVar("uid"),
    'X-Fresns-Uid-Token': bru.getEnvVar("uidToken"),
    'X-Fresns-Signature-Timestamp': signTimestamp,
  };
  
  // App Key
  const appKey = bru.getEnvVar("appKey");
  
  // Signature
  const strA = [
    'X-Fresns-Space-Id',
    'X-Fresns-App-Id',
    'X-Fresns-Client-Platform-Id',
    'X-Fresns-Client-Version',
    'X-Fresns-Aid',
    'X-Fresns-Aid-Token',
    'X-Fresns-Uid',
    'X-Fresns-Uid-Token',
    'X-Fresns-Signature-Timestamp',
  ].filter((v) => headers[v]).sort();
  
  const stringSignTemp = strA.map((key) => `${key}=${headers[key]}`).join('&') + `&AppKey=${appKey}`;
  
  const signature = CryptoJS.SHA256(stringSignTemp);
  
  // Header Settings
  req.setHeader("X-Fresns-Client-Device-Info", deviceInfoBase64);
  req.setHeader("X-Fresns-Client-Timezone", utcTimezone);
  req.setHeader("X-Fresns-Signature", signature);
  req.setHeader("X-Fresns-Signature-Timestamp", signTimestamp);
}
